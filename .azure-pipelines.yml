# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: terraform-secrets # TF_API_TOKEN securely stored
  - name: TF_CLOUD_ORGANIZATION
    value: "TF_Cloud_Org_101"
  - name: TF_WORKSPACE
    value: "tf-gcp-with-ado"

stages:
  - stage: Validate
    displayName: "Terraform Validation"
    jobs:
      - job: ValidateJob
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.8.2' # Pinning version for stability

          - script: terraform init
            env:
              TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
            displayName: "Terraform Init"

          - script: terraform validate
            displayName: "Terraform Validate"

          - script: terraform fmt -check
            displayName: "Terraform Format Check"

  - stage: Plan
    displayName: "Terraform Plan"
    dependsOn: Validate
    jobs:
      - job: PlanJob
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.8.2'

          - script: terraform init
            env:
              TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
            displayName: 'Terraform Init'

          - script: terraform plan
            env:
              TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
            displayName: 'Terraform Plan (Dry Run)'

  - stage: Apply
    displayName: "Terraform Apply"
    dependsOn: Plan
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: ApplyDeployment
        environment: "prod-approval" # This triggers manual approval
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self # Explicitly check out the code for deployment jobs

                - task: TerraformInstaller@1
                  displayName: 'Install Terraform'
                  inputs:
                    terraformVersion: '1.8.2'

                - script: terraform init
                  env:
                    TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
                  displayName: 'Terraform Init'

                - script: terraform apply -auto-approve
                  env:
                    TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
                  displayName: "Terraform Apply"

                - script: echo "Terraform deployment completed successfully."
                  displayName: "Deployment Complete"
