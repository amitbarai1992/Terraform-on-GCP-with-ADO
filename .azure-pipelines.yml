# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: terraform-secrets
  - name: TF_CLOUD_ORGANIZATION
    value: "TF_Cloud_Org_101"
  - name: TF_WORKSPACE
    value: "tf-gcp-with-ado"
  - name: RunDestroy
    value: 'false'

stages:
- stage: Validate
  displayName: "Terraform Validation"
  jobs:
  - job: ValidateJob
    timeoutInMinutes: 30
    steps:
    - template: templates/terraform-common.yml
      parameters:
        terraformVersion: '1.8.2'
    - script: terraform validate
      displayName: "Terraform Validate"
    - script: terraform fmt -check
      displayName: "Terraform Format Check"
    - script: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        tflint
      displayName: "Terraform Lint"

- stage: Plan
  displayName: "Terraform Plan"
  dependsOn: Validate
  jobs:
  - job: PlanJob
    timeoutInMinutes: 30
    steps:
    - template: templates/terraform-common.yml
      parameters:
        terraformVersion: '1.8.2'
    - script: terraform plan -out=tfplan
      env:
        TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
      displayName: "Terraform Plan"
    - publish: tfplan
      artifact: terraformPlan

- stage: Apply
  displayName: "Terraform Apply"
  dependsOn: Plan
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: ApplyDeployment
    environment: "prod-approval"
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - template: templates/terraform-common.yml
            parameters:
              terraformVersion: '1.8.2'
          - download: current
            artifact: terraformPlan
          - script: terraform apply tfplan
            env:
              TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
            displayName: "Terraform Apply"
          - script: echo "Terraform deployment completed successfully."
            displayName: "Deployment Complete"

- stage: Destroy
  displayName: "Terraform Destroy"
  dependsOn: Apply
  condition: and(succeeded(), eq(variables['RunDestroy'], 'true'))
  jobs:
  - deployment: DestroyDeployment
    environment: 'prod-destroy-approval'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - template: templates/terraform-common.yml
            parameters:
              terraformVersion: '1.8.2'
          - script: terraform destroy -auto-approve
            env:
              TF_TOKEN_app_terraform_io: $(TF_API_TOKEN)
            displayName: "Terraform Destroy"
          - script: echo "Terraform destroy completed successfully."
            displayName: "Destroy Complete"